name: Branch Protection

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  enforce-branch-rules:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check direct push source
      if: github.event_name == 'push'
      id: check_push
      run: |
        git fetch origin  # Fetch the latest state of all branches.
        # Check if the last commit is a merge commit
        PARENTS_COUNT=$(git cat-file -p HEAD | grep -c parent)
        if [[ "$PARENTS_COUNT" -lt 2 ]]; then
          echo "::set-output name=error::Direct pushes to main should be merge commits from the staging branch."
          exit 1
        fi
        # Check if the merge commit is from staging to main
        PARENT_COMMIT=$(git rev-parse HEAD^2)
        STAGING_COMMIT=$(git rev-parse origin/staging)
        if [[ "$PARENT_COMMIT" != "$STAGING_COMMIT" ]]; then
          echo "::set-output name=error::Direct pushes to main are only allowed from the staging branch."
          exit 1
        fi

    - name: Check PR source branch
      if: github.event_name == 'pull_request'
      run: |
        if [[ "${{ github.head_ref }}" != "hotfix"* ]]; then
          echo "Error: Only PRs from branches starting with hotfix are allowed to merge into main."
          exit 1
        fi

    - name: Create check run if there's an error
      if: steps.check_push.outputs.error
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { owner, repo } = context.repo;
          const error = "${{ steps.check_push.outputs.error }}";
          github.checks.create({
            owner,
            repo,
            name: 'Branch Protection',
            head_sha: context.sha,
            status: 'completed',
            conclusion: 'failure',
            output: {
              title: 'Branch Protection Error',
              summary: error,
              annotations: [{
                path: '.github/workflows/branch-protection.yml',  # Replace with your actual workflow filename
                start_line: 1,
                end_line: 1,
                annotation_level: 'failure',
                message: error
              }]
            }
          });
