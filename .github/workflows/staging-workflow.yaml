name: Staging CI/CD

on:
  pull_request:
    types:
      - closed
    branches:
      - staging

jobs:         
  build:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0
      - name: Get short sha
        id: get_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker images
        run: |
          export GITHUB_SHA_TAG=${{ steps.get_sha.outputs.sha_short }}-alpha
          docker-compose -f uplink-hub/docker-compose.yaml build
          docker-compose -f uplink-hub/docker-compose.yaml push
          

          
  create-prerelease:
    needs: build
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0
    - name: Bump version and push tag
      id: create_tag
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        PRERELEASE: true
        PRERELEASE_SUFFIX: 'alpha'
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.new_tag }}
        release_name: Release ${{ steps.create_tag.outputs.new_tag }}
        draft: false
        prerelease: true
        
    - name: Create PR on main
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;
          const result = await github.rest.pulls.create({
            title: 'Merge ${{ github.ref_name }} back into main',
            owner,
            repo,
            head: '${{ github.ref_name }}',
            base: 'main',
            body: [
              'This PR is auto-generated by the release branch workflow.'
            ].join('\n')
          });


