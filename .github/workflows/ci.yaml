on:
  pull_request:
    types:
      - closed
    branches:
      - main


env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: uplink-hub-cluster
  GKE_ZONE: us-east4-a
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NODE_OPTIONS: --max-old-space-size=16384

jobs:
  build:
      name: build
      if: github.event.pull_request.merged
      runs-on: 32g-ram
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            ref: ${{ github.sha }}
            fetch-depth: 0

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
          
        - name: Bump version and push tag
          id: bump_tag
          uses: anothrNick/github-tag-action@1.64.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            WITH_V: true
            DEFAULT_BUMP: minor
            
        - name: Save version to file
          run: echo "${{ steps.bump_tag.outputs.new_tag }}" > version.txt
          
        - name: Upload version artifact
          uses: actions/upload-artifact@v2
          with:
            name: version
            path: version.txt
        
        - name: Expose GitHub Runtime
          uses: crazy-max/ghaction-github-runtime@v2

        - name: Build and push docker images
          run: |
            export GITHUB_VERSION_TAG=${{ steps.bump_tag.outputs.new_tag }}
            docker-compose -f uplink-hub/docker-compose.yaml build
            docker-compose -f uplink-hub/docker-compose.yaml push


  deploy-staging:
    name: staging
    if: github.event.pull_request.merged
    runs-on: 32g-ram
    environment: staging
    permissions:
      id-token: write
      contents: read
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0
          
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
          
      - name: Init gcloud CLI
        uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ secrets.GKE_PROJECT }}
          location: ${{ env.GKE_ZONE }}
          
      - name: Download version artifact
        uses: actions/download-artifact@v2
        with:
          name: version

      - name: Read version artifact
        id: read_version
        run: echo "::set-output name=version::$(cat version.txt)"
      
      - name: Set up helm
        uses: azure/setup-helm@v3
        with:
           version: '3.11.0'
           token: ${{ secrets.GITHUB_TOKEN }}
        id: install
          
      - name: Deploy staging hub
        run: |
          cd uplink-hub/helm
          helm package --app-version=${{ steps.read_version.outputs.version }} ./uplink-charts/ \
          | helm upgrade -i uplink-hub ./uplink-charts-0.1.0.tgz -n staging \
          -f ./uplink-charts/values.staging.yaml --set image_version_tag=${{ steps.read_version.outputs.version }}
          
      - name: Upload chart artifact
        uses: actions/upload-artifact@v2
        with:
          name: chart
          path: uplink-hub/helm/uplink-charts-0.1.0.tgz

      - name: Deploy staging FE
        run: |
          yarn global add vercel@canary
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          vercel alias --token=${{ secrets.VERCEL_TOKEN }} --scope=calabara set "$url" staging.uplink.wtf

  deploy-production:
    name: production
    if: github.event.pull_request.merged
    runs-on: 32g-ram
    environment: production
    needs: [build, deploy-staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0
          
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
          
      - name: Init gcloud CLI
        uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ secrets.GKE_PROJECT }}
          location: ${{ env.GKE_ZONE }}

      - name: Download version artifact
        uses: actions/download-artifact@v2
        with:
          name: version

      - name: Read version artifact
        id: read_version
        run: echo "::set-output name=version::$(cat version.txt)"
        
      - name: Download chart artifact
        uses: actions/download-artifact@v2
        with:
          name: chart 
          path: uplink-hub/helm

      - name: Set up helm
        uses: azure/setup-helm@v3
        with:
           version: '3.11.0'
           token: ${{ secrets.GITHUB_TOKEN }}
        id: install
          
      - name: Deploy production Hub
        run: |
          cd uplink-hub/helm
          helm upgrade -i uplink-hub ./uplink-charts-0.1.0.tgz -n production \
          -f ./uplink-charts/values.production.yaml --set image_version_tag=${{ steps.read_version.outputs.version }}

      - name: Deploy production FE
        run: |
          yarn global add vercel@canary
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          if ! vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}; then
            echo "::error::Vercel build failed!, Rolling back hub version"
            helm rollback 'uplink-hub' -n production
            exit 1
          fi
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.read_version.outputs.version }}
          release_name: Release ${{ steps.read_version.outputs.version }}
          draft: false
          prerelease: false
