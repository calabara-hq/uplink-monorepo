import { DocumentNode } from 'graphql';
import { ReactElement } from 'react';
import { AnyVariables, TypedDocumentNode, OperationResult, OperationContext } from '@urql/core';
import { UseMutationState } from '../hooks';
export interface MutationProps<Data = any, Variables extends AnyVariables = AnyVariables> {
    query: DocumentNode | TypedDocumentNode<Data, Variables> | string;
    children: (arg: MutationState<Data, Variables>) => ReactElement<any>;
}
export interface MutationState<Data = any, Variables extends AnyVariables = AnyVariables> extends UseMutationState<Data, Variables> {
    executeMutation: (variables: Variables, context?: Partial<OperationContext>) => Promise<OperationResult<Data, Variables>>;
}
export declare function Mutation<Data = any, Variables extends AnyVariables = AnyVariables>(props: MutationProps<Data, Variables>): ReactElement<any>;
