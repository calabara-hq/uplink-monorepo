schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.2", for: EXECUTION)
{
  query: Query
}

directive @join__field(graph: join__Graph!, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type Contest
  @join__type(graph: CONTESTS)
{
  id: ID!
  org_id: Int!
  ens: String!
}

scalar join__FieldSet

enum join__Graph {
  CONTESTS @join__graph(name: "contests", url: "http://localhost:4002")
  ORGANIZATIONS @join__graph(name: "organizations", url: "http://localhost:4001")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Organization
  @join__type(graph: CONTESTS, key: "id")
  @join__type(graph: ORGANIZATIONS, key: "id")
{
  id: ID!
  orgContests: [Contest]! @join__field(graph: CONTESTS)
  name: String! @join__field(graph: ORGANIZATIONS)
  ens: String! @join__field(graph: ORGANIZATIONS)
  members: Int! @join__field(graph: ORGANIZATIONS)
  logo: String! @join__field(graph: ORGANIZATIONS)
  website: String @join__field(graph: ORGANIZATIONS)
}

type Query
  @join__type(graph: CONTESTS)
  @join__type(graph: ORGANIZATIONS)
{
  contests: [Contest!]! @join__field(graph: CONTESTS)
  organizations: [Organization!]! @join__field(graph: ORGANIZATIONS)
  organizationByEns(ens: String): Organization @join__field(graph: ORGANIZATIONS)
}
