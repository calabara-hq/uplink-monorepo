datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.VarChar(1000)
  expiresAt DateTime

  @@index([id])
}

model Space {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  displayName String
  members     Int
  logoUrl     String
  twitter     String?
  website     String?
  admins      Admin[]
  contests    Contest[]
  tokens      Token[]

  @@index([name])
}

model Admin {
  id      Int    @id @default(autoincrement())
  address String
  space   Space  @relation(fields: [spaceId], references: [id])
  spaceId Int

  @@index([spaceId])
}

model Contest {
  id                         Int                         @id @default(autoincrement())
  space                      Space                       @relation(fields: [spaceId], references: [id])
  spaceId                    Int
  created                    String
  type                       String
  category                   String
  startTime                  String
  voteTime                   String
  endTime                    String
  snapshot                   String
  promptUrl                  String
  anonSubs                   Boolean
  visibleVotes               Boolean
  selfVote                   Boolean
  subLimit                   Int
  submitterRewards           SubmitterReward[]
  voterRewards               VoterReward[]
  submitterTokenRestrictions SubmitterTokenRestriction[]
  tokenVotingPolicies        TokenVotingPolicy[]

  @@index([spaceId])
}

model SubmitterReward {
  id        Int     @id @default(autoincrement())
  contest   Contest @relation(fields: [contestId], references: [id])
  contestId Int
  token     Token   @relation(fields: [tokenLink], references: [id])
  tokenLink Int
  type      String
  rank      Int
  amount    String?
  tokenId   Int?

  @@index([tokenLink])
  @@index([contestId])
}

model VoterReward {
  id        Int     @id @default(autoincrement())
  contest   Contest @relation(fields: [contestId], references: [id])
  contestId Int
  token     Token   @relation(fields: [tokenLink], references: [id])
  tokenLink Int
  type      String
  rank      Int
  amount    String?
  tokenId   Int?

  @@index([tokenLink])
  @@index([contestId])
}

model SubmitterTokenRestriction {
  id        Int     @id @default(autoincrement())
  contest   Contest @relation(fields: [contestId], references: [id])
  contestId Int
  token     Token   @relation(fields: [tokenLink], references: [id])
  tokenLink Int
  threshold String

  @@index([tokenLink])
  @@index([contestId])
}

model TokenVotingPolicy {
  id           Int     @id @default(autoincrement())
  contest      Contest @relation(fields: [contestId], references: [id])
  contestId    Int
  token        Token   @relation(fields: [tokenLink], references: [id])
  tokenLink    Int
  strategyType String
  

  @@index([tokenLink])
  @@index([contestId])
}

model Token {
  id                    Int                         @id @default(autoincrement())
  tokenHash             String                      @unique
  type                  String
  symbol                String
  decimals              Int
  address               String?
  tokenId               Int?
  spaces                Space[]
  submitterRewards      SubmitterReward[]
  voterRewards          VoterReward[]
  submitterRestrictions SubmitterTokenRestriction[]
  tokenVotingPolicies   TokenVotingPolicy[]
}
