version: "3.9"
services:
  proxy:
    container_name: proxy
    build:
      context: .
      dockerfile: ./packages/proxy/Dockerfile
    ports:
      - "8080:80"
      - "443:443"

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./packages/auth/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./packages/auth:/usr/src/app/packages/auth
    environment:
      - REDIS_URL=${REDIS_URL}
      - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
      - TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}
      - TWITTER_ACCESS_TOKEN_KEY=${TWITTER_ACCESS_TOKEN_KEY}
      - TWITTER_ACCESS_TOKEN_SECRET=${TWITTER_ACCESS_TOKEN_SECRET}
      - TWITTER_OAUTH_CLIENT_ID=${TWITTER_OAUTH_CLIENT_ID}
      - TWITTER_OAUTH_CLIENT_SECRET=${TWITTER_OAUTH_CLIENT_SECRET}
      - TWITTER_BEARER=${TWITTER_BEARER}
      - TWITTER_CALLBACK_URL=${TWITTER_CALLBACK_URL}

  media:
    container_name: media
    build:
      context: .
      dockerfile: ./packages/media/Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./packages/media:/usr/src/app
    environment:
      - PINATA_KEY=${PINATA_KEY}
      - PINATA_SECRET=${PINATA_SECRET}

  graphql:
    container_name: graphql
    build:
      context: .
      dockerfile: ./packages/graphql-api/Dockerfile
    ports:
      - "4001:4000"

  spaces:
    container_name: spaces
    build:
      context: .
      dockerfile: ./packages/graphql-api/subgraphs/spaces/Dockerfile
    ports:
      - "4002:4000"
    volumes:
      - ./packages/graphql-api/subgraphs/spaces/src:/usr/src/app/packages/spaces/src
    environment:
      - REDIS_URL=${REDIS_URL}
      - ALCHEMY_KEY=${ALCHEMY_KEY}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

  contests:
    container_name: contests
    build:
      context: .
      dockerfile: ./packages/graphql-api/subgraphs/contests/Dockerfile
    ports:
      - "4003:4000"
    volumes:
      - ./packages/graphql-api/subgraphs/contests/src:/usr/src/app/packages/contests/src
    environment:
      - REDIS_URL=${REDIS_URL}
      - PINATA_KEY=${PINATA_KEY}
      - PINATA_SECRET=${PINATA_SECRET}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

  submissions:
    container_name: submissions
    build:
      context: .
      dockerfile: ./packages/graphql-api/subgraphs/submissions/Dockerfile
    ports:
      - "4004:4000"
    volumes:
      - ./packages/graphql-api/subgraphs/submissions/src:/usr/src/app/packages/submissions/src

  voting:
    container_name: voting
    build:
      context: .
      dockerfile: ./packages/graphql-api/subgraphs/voting/Dockerfile
    ports:
      - "4005:4000"
    volumes:
      - ./packages/graphql-api/subgraphs/voting/src:/usr/src/app/packages/voting/src
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

volumes:
  spaces_node_modules:
    #auth_node_modules:
  contests_node_modules:
  submissions_node_modules:
  voting_node_modules:
