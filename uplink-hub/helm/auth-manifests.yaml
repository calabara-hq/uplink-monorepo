---
# Source: uplink-charts/templates/auth.yaml
apiVersion: v1
kind: Service
metadata:
  name: auth
spec:
  type: ClusterIP
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
# Source: uplink-charts/templates/auth.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth
        image: "nickdodson/auth-service:v0.44.1"
        
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 2
          successThreshold: 2
          failureThreshold: 2
          httpGet:
            path: /health
            port: 8080
            httpHeaders:
            - name: apollo-require-preflight
              value: "true"

        resources:
          requests:
            cpu: "20m"
        env:
          - name: AUTH_SERVICE_PORT
            value: "8080"
        envFrom:
          - secretRef:
              name: production-sealed-secret
---

# Source: uplink-charts/templates/auth.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: auth-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
---

# Source: uplink-charts/templates/ingress.yaml
# apiVersion:  networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/enable-cors: "true"
#     nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.uplink.wtf"
#     nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
#     nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Cookie,X-CSRF-TOKEN"
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     cert-manager.io/cluster-issuer: letsencrypt-production
# spec:
#   tls:
#   - hosts:
#     - hub.uplink.wtf
#     secretName: production-tls
#   rules:
#   - host: hub.uplink.wtf
#     http:
#       paths:

#       - path: /api/auth/(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: auth
#             port:
#               number: 8080

#       - path: /api/media/(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: media
#             port:
#               number: 8080

#       - path: /api/graphql
#         pathType: Prefix
#         backend:
#           service:
#             name: router
#             port:
#               number: 8080
