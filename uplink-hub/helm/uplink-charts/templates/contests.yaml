apiVersion: apps/v1
kind: Deployment
metadata:
  name: contests
spec:
  replicas: {{ .Values.contests.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: contests
  template:
    metadata:
      labels:
        app: contests
    spec:
      containers:
      - name: contests
        image: "{{ .Values.contests.image.repository }}:{{ .Values.image_version_tag }}"

        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 2
          successThreshold: 2
          failureThreshold: 2
          httpGet:
            path: /?query=%7B__typename%7D
            port: 8080
            httpHeaders:
            - name: apollo-require-preflight
              value: "true"

        resources:
          requests:
            cpu: "20m"
        env:
          - name: CONTEST_SERVICE_PORT
            value: "8080"
        envFrom:
          - secretRef:
              name: {{ .Values.sealedSecretName }}

---

apiVersion: v1
kind: Service
metadata:
  name: contests
spec:
  type: ClusterIP
  selector:
    app: contests
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: contests-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: contests
  minReplicas: {{ .Values.contests.hpa.minReplicas }}
  maxReplicas: {{ .Values.contests.hpa.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.contests.hpa.targetCpuPercentage }}
