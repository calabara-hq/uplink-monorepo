scalar Decimal
scalar IpfsUrl

type Vote @key(fields: "id") {
  id: ID!
  submissionId: ID!
  votes: Decimal!
}

type SampleResponse {
  success: Boolean!
}

type VoteObject {
  id: ID!
  votes: Decimal!
  submissionId: ID!
  submissionUrl: IpfsUrl!
}

type UserVotingParams {
  totalVotingPower: Decimal!
  votesSpent: Decimal!
  votesRemaining: Decimal!
  userVotes: [VoteObject!]!
}

type Query {
  testEndpoint(id: ID!): SampleResponse!
  getUserVotingParams(contestId: ID!): UserVotingParams!
}

input CastVotePayload {
  submissionId: ID!
  votes: Decimal!
}

type CastVoteResponse {
  success: Boolean!
  userVotingParams: UserVotingParams!
}

type RemoveSingleVoteResponse {
  success: Boolean!
  userVotingParams: UserVotingParams!
}

type RemoveAllVotesResponse {
  success: Boolean!
  userVotingParams: UserVotingParams!
}

type Mutation {
  castVotes(
    contestId: ID!
    castVotePayload: [CastVotePayload!]!
  ): CastVoteResponse!
  removeSingleVote(submissionId: ID!, contestId: ID!): RemoveSingleVoteResponse!
  removeAllVotes(contestId: ID!): RemoveAllVotesResponse!
}

extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@shareable"]
  )
